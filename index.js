import{i as a,S as E,a as M}from"./assets/vendor-Dy2ZTtfi.js";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=t(e);fetch(e.href,o)}})();const p=document.querySelector(".js-gallery"),y=document.querySelector(".loader"),f=document.querySelector(".load-more-btn"),R="https://pixabay.com/api/",$="51361709-3ae7eddc83ad637b7c3fc8345",L=15,q={image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:L};function B(){p.innerHTML=""}function b(){y.classList.remove("hidden")}function w(){y.classList.add("hidden")}function j(){f.classList.replace("hidden","load-more-btn")}function h(){f.classList.add("load-more-btn","hidden")}let d=null;function I(){d?d.refresh():d=new E(".js-gallery a",{captionsData:"alt",captionDelay:500,doubleTapZoom:1.2,maxZoom:4,disableScroll:!0})}function S(r,i){r>=i?(h(),a.warning({title:"⚠️ Warning",message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:4e3})):j()}async function P(r,i){const t=new URLSearchParams({key:$,q:r,page:i,...q});try{return(await M.get(`${R}?${t}`)).data}catch{a.error({title:"Error",message:"Ooops! Somethings went wrong",position:"topRight",timeout:4e3})}}function v(r){const i=r.map(({largeImageURL:t,webformatURL:s,tags:e,...o})=>{const n=e.split(",").map(u=>u.trim()).slice(0,3).join(","),x=["Likes","Views","Comments","Downloads"].map(u=>`
            <li class="images-info-item">
              <h3 class="images-info-subtitle">${u}</h3>
              <p class="images-info-value">${o[u.toLowerCase()]}</p>
            </li>`).join("");return`<li class="gallery-item">
          <a class="gallery-link" href="${t}">
            <img class="gallery-image" src="${s}" alt="${n}" />
            <ul class="images-info-list">${x}</ul>
          </a>
        </li>`}).join("");p.insertAdjacentHTML("beforeend",i),I()}let c=1,m=0,l="";const g=document.querySelector(".js-form");g.addEventListener("submit",O);f.addEventListener("click",T);async function O(r){if(r.preventDefault(),l=g.elements["search-text"].value.trim(),!l){a.error({title:"Error",message:"field must not be empty",position:"topRight"});return}B(),h(),b();try{const t=await P(l,c=1);if(!t.hits.length){a.warning({title:"⚠️ Warning",message:`Sorry, there are no images matching your "${l}". Please try again!`,position:"topRight",timeout:4e3});return}m=Math.ceil(t.totalHits/L),v(t.hits),S(c,m)}catch(t){a.error({title:"Error",message:t.message,position:"topRight"})}finally{g.reset(),w()}}async function T(){c++,h(),b();try{const r=await P(l,c);v(r.hits);let t=document.querySelector(".gallery-item").getBoundingClientRect().height;window.scrollBy({top:t*2+40,behavior:"smooth"})}catch(r){a.error({title:"Error",message:r.message,position:"topRight"})}finally{S(c,m),w()}}
//# sourceMappingURL=index.js.map
